cloudSimulator {
  utilizationRatio = 0.5
  host {
      mipsCapacity = 20000
      RAMInMBs = 10000
      StorageInMBs = 100000
      BandwidthInMBps = 100000
  }
  vm {
      mipsCapacity = 1000
      RAMInMBs = 1000
      StorageInMBs = 1000
      BandwidthInMBps = 1000
  }
  cloudlet {
      size = 10000
      PEs = 1
  }
}

saasDataCenter  {
    utilizationRatio = 0.5
    schedulingInterval = 1
     VMAllocationPolicy = Simple #BestFit #FirstFit #Random #RoundRobin
    host {
        CreationType = static
        Count = 15
        Pes = 4
        mipsCapacity = 20000
        RAMInMBs = 10000
        StorageInMBs = 100000
        BandwidthInMBps = 100000
        VMschedulerType = TimeShared #SpaceShared #TimeShared
    }
    vm {
        CreationType = static #dynamic
        InitialCount = 2
        Pes = 1
        mipsCapacity = 1000
        RAMInMBs = 512
        BandwidthInMBps = 1000
        StorageInMMapBs = 1000
        DefaultSubmissionDelay = 0

        HorizontalScalingEnabled = true
        HorizontalScaling {
            OverLoadThreshold = 0.8
        }

        VerticalCpuScalingEnabled = true
        VerticalCpuScaling {
            ScalingFactor = 0.1
            LowerCpuUtilizationThreshold =0.4
            UpperCpuUtilizationThreshold = 0.8
        }

        VerticalRamScalingEnabled = false
        VerticalRamScaling {
            ScalingFactor = 0.1
            LowerRamUtilizationThreshold =0.5
            UpperRamUtilizationThreshold = 0.8
        }

    }
    broker {
        BrokerType = BestFit #FirstFit, Simple
        VMDestructionDelay = 15 # by setting this paramater, the vms will be automatically downscales after the specified idle time
    }
    cloudSimulator {
      utilizationRatio = 0.5
      host {
          mipsCapacity = 20000
          RAMInMBs = 10000
          StorageInMBs = 100000
          BandwidthInMBps = 100000
      }
      vm {
          mipsCapacity = 1000
          RAMInMBs = 1000
          StorageInMBs = 1000
          BandwidthInMBps = 1000
      }
      cloudlet {
          size = 10000
          PEs = 1
      }
    }
}

MapReduceJob  {
    TotalDataSizeMbs = 1000000
    SplitSizeMbs = 1000
    #properties that define a mapper cloudlet
    MapperRamMbs = 10
    MapperBw = 10
    MapperPe = 1
    MapperSubmissionDelay = 1
    MapperUtilizationModelRam = Stochastic #Dynamic #Full #Stochastic
    MapperUtilizationModelBw = Stochastic
    MapperUtilizationModelCpu = Stochastic
    #properties that define a reducer cloudlet
    ReducerRam = 10
    ReducerBw = 10
    ReducerPe = 1
    ReducerSubmissionDelay = 1
    ReducerUtilizationModelRam = Stochastic
    ReducerUtilizationModelBw = Stochastic
    ReducerUtilizationModelCpu = Stochastic
}